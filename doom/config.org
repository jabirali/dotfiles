#+TITLE: Configuration for Doom Emacs
#+AUTHOR: Jabir Ali Ouassou
#+PROPERTY: header-args :tangle yes :cache yes :results silent

This is a *literate configuration file* for [[https://github.com/hlissner/doom-emacs][Doom Emacs]]. This means it takes
the form of an Org document with inline code blocks, which is *tangled* to 3
Emacs Lisp files when I run =doom/reload=. The resulting code files represent
my full Doom Emacs configuration. If the =*.el= files are damaged, they can be
regenerated outside Emacs using the =org-tangle= utility bundled with Doom:
#+begin_src bash
org-tangle ~/.config/doom/config.org
#+end_src

The target platform is the [[https://bitbucket.org/mituharu/emacs-mac/src/master/]["Emacs Mac Port" by Mitsuharu Yamamoto]] running
on MacOS 11, which is available via [[https://github.com/railwaycat/homebrew-emacsmacport][Railwaycat's Homebrew repository]]. In
my experience, this provides the best Emacs experience on MacOS, avoiding
flickering/stuttering problems found in some other versions, and supporting
more of the expected MacOS default desktop behaviours. Most of this config
is however equally usable on Linux (which I was using when I adopted Doom).

* Table of contents :TOC:
- [[#configuration][Configuration]]
  - [[#metadata][Metadata]]
  - [[#accounts-and-locations][Accounts and locations]]
  - [[#user-interface][User interface]]
  - [[#keybindings][Keybindings]]
- [[#doom-modules][Doom modules]]
- [[#emacs-packages][Emacs packages]]
  - [[#header-line][Header line]]
  - [[#better-defaults][Better defaults]]

* Configuration
:PROPERTIES:
:header-args: :tangle config.el
:END:

** Header line
This enables *lexical binding*, which is generally considered a good idea:
#+begin_src elisp
;;; -*- lexical-binding: t; -*-
;;; config.el -- custom configuration for doom emacs
#+end_src

To illustrate what this means, consider the following example from [[https://www.emacswiki.org/emacs/DynamicBindingVsLexicalBinding][EmacsWiki]]:
#+begin_src elisp :tangle no
    (let ((a 1))
      (let ((f (lambda () (print a))))
        (let ((a 2))
          (funcall f))))
#+end_src
Using *lexical binding* (enabled above), the code prints =1= since that is
what the variable =a= was at the time =f= was defined. Using *dynamic binding*
(the default), the above prints =2= since that is the most recent value of =a=.
Using lexical binding makes the code easier to debug and easier to optimize.

** Accounts and locations
This section defines the user accounts and system folders relevant for Emacs.
This includes mail accounts, mail folders, notes folders, and bibliographies.

*** User identity
This is used by a lot in Emacs: mail, encryption, templates, snippets, etc.
#+begin_src elisp
(setq user-full-name "Jabir Ali Ouassou"
      user-mail-address "jabirali@switzerlandmail.ch")
#+end_src

*** Document folders
These locations are especially used by Org-mode, for files and references.
#+begin_src elisp
(setq org-directory "~/iCloud/Org/"
      org-agenda-files '("~/iCloud/Org/")
      +org-capture-todo-file "~/iCloud/Org/Inbox.org")

(setq reftex-default-bibliography "~/Library/Zotero/Library.bib"
      bibtex-completion-bibliography '("~/Library/Zotero/Library.bib")
      org-ref-default-bibliography '("~/Library/Zotero/Library.bib"))
#+end_src

** User interface
Select the colortheme theme and fonts. For now, I'm using Doom One with default
MacOS fonts, but Gruvbox and Moonlight are also nice, and for programming the
Input and Iosevka fonts are cool. Note the difference between =doom-font= and
=doom-variable-pitch-font=: the former is monospace, the latter is "normal".
#+begin_src elisp
(setq doom-theme 'doom-one
      doom-font "Monaco-13"
      doom-variable-pitch-font "Monaco-13")
#+end_src

By default, I want an undecorated maximized frame for Emacs. This lets me use
Emacs on its own desktop (which I jump to via the keybinding =C-1= on MacOS),
and gives me enough space on a MacBook Air to have two 80-column files open.
#+begin_src elisp
(add-to-list 'default-frame-alist '(fullscreen  . maximized))
(add-to-list 'default-frame-alist '(undecorated . t))
#+end_src

Select the line number settings. This can be =nil= to turn them off, =t= to turn
on absolute line numbers, or ='relative= to turn on relative line numbers. While
I like the idea of relative numbers for easier Vim motion (jumps like e.g. =13k=),
these are not that useful when using folding in Doom Emacs; the numbers show
absolute line number differences while =#j= and =#k= use visual differences.
#+begin_src elisp
(setq display-line-numbers-type t)
#+end_src
Note that line numbers in general can cause issues with smooth scrolling, and
look strange in buffers with wrapped lines, so disable in case of these issues.

** Keybindings
*** MacOS defaults
These keybindings mirror what are used in other MacOS apps, e.g. iTerm2.
Here, the modifier =s= refers to the command key (⌘). Note that some
relevant keybindings, like ⌘s, ⌘t, ⌘w, and ⌘1-⌘9, are already defined.
#+begin_src elisp
(map!
 "s-[" 'evil-window-prev
 "s-]" 'evil-window-next
 "s-d" 'evil-window-vsplit
 "s-D" 'evil-window-split)
#+end_src

* Doom modules
:PROPERTIES:
:header-args: :tangle init.el
:END:

This file controls what Doom modules are enabled and what order they load.
You can use =K= and =gd= to inspect a module or flag, and run =doom sync=
after modifying this file to ensure that Doom Emacs is up to date.

** Header line
Enable lexical binding, and then start the =doom!= module block.
#+begin_src elisp
;;; -*- lexical-binding: t; -*-
;;; init.el -- high-level package management for doom emacs

(doom!
#+end_src

** Package list
*** System integration
This enables tighter integration with the rest of the MacOS operating system, 
including relevant "open with" menu items and a KeyChain auth source.
#+begin_src elisp
:os (:if IS-MAC macos)
#+end_src


*** Miscellaneous
#+begin_src elisp
       :completion
       (company)
       (ivy +icons)

       :ui
       (doom)
       (doom-dashboard)
       (doom-quit)
       (hl-todo)
       (indent-guides)
       (modeline)
       (ophints)
       (popup +all +defaults)
       (vc-gutter)
       (vi-tilde-fringe)
       (workspaces)

       :editor
       (evil +everywhere)
       (file-templates)
       (fold)
       (format +onsave)
       (snippets)

       :emacs
       (dired +ranger +icons)
       (electric)
       (undo)
       (vc)

       :term
       (eshell)
       (vterm)

       :checkers
       (syntax)
       (spell +everywhere)

       :tools
       (direnv)
       (editorconfig)
       (eval +overlay)
       (lookup +docsets)
       (lsp +eglot)
       (magit)
       (pdf)

       :lang
       ;;
       (markdown)
       (org)
       (latex +lsp +latexmk)

       (emacs-lisp)
       (python +lsp +pyright)
       (sh +lsp +fish)

       ;; CSV
       (data)

       :email
       (mu4e)

       :config
       (literate)
       (default +bindings +smartparens)
#+end_src

** Footer
This important single paren closes the =doom!= block.
#+begin_src elisp
)
#+end_src

* Emacs packages
:PROPERTIES:
:header-args: :tangle packages.el
:END:

This is a separate list of packages to enable or disable, which is tangled to a
separate Doom configuration file =packages.el=. See the =package!= macro for
more information about how to enable things, with the keywords =:recipe= for
stuff like GitHub packages and =:disable= to turn off built-in packages.

Remember to run =doom sync= after updating this section!

** Header line
Disable byte-compilation of the package file.
#+begin_src elisp
;;; -*- no-byte-compile: t; -*-
;;; packages.el -- low-level package management for doom emacs
#+end_src

** Better defaults
Disable the =hl-line= package. While it can look nice, it turns out simply being
distracting in modes like e.g. Org-mode, since (1) indentation is not highlighted
and (2) line-wrapping makes the size of the highlights inconsistent as you scroll.
#+begin_src elisp
(package! hl-line :disable t)
#+end_src
